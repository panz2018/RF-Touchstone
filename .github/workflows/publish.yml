name: Publish to npmjs

on:
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org/'

      - name: Enable Corepack
        run: corepack enable

      - name: Install Node.js dependencies
        run: yarn

      - name: Build package
        run: yarn build

      - name: Get package version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Check if version already exists on npm
        id: check_version
        run: |
          package_name=$(node -p "require('./package.json').name")
          current_version=${{ steps.get_version.outputs.version }}
          echo "Debug: Package name = $package_name"
          echo "Debug: Current version = $current_version"
          # Use npm view to get published versions and extract the JSON array
          published_versions=$(npm view $package_name versions --json 2>/dev/null || echo "[]")
          echo "Debug: Published versions raw = $published_versions"
          # Extract versions using grep and sed to remove quotes and brackets
          if echo "$published_versions" | grep -o "\"[^\"]*\"" | sed 's/"//g' | grep -q "^$current_version$"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to npm
        if: steps.check_version.outputs.exists == 'false'
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Skip publish message
        if: steps.check_version.outputs.exists == 'true'
        run: echo "Version ${{ steps.get_version.outputs.version }} already exists on npm. Skipping publish."
