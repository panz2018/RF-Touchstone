name: Test

on:
  # Runs on pushes targeting the default branch
  pull_request:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  pre-merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Node.js dependencies
        run: yarn install

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Cache uv global directory
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv # Default uv cache path on Linux
          key: ${{ runner.os }}-uv-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install uv and Python dependencies
        shell: bash
        run: |
          # Install uv
          curl -LsSf https://astral.sh/uv/install.sh | sh
          # The installer script should add uv to PATH. If not, source the cargo env or add manually.
          # Example if installed via cargo (common for Rust tools):
          source "$HOME/.cargo/env"

          # Create virtual environment using uv, explicitly using the Python from setup-python
          uv venv .venv --python $(which python)

          # Activate virtual environment for this script block
          source .venv/bin/activate

          # Install packages using uv
          uv pip install -r requirements.txt --keyring-provider=disabled

      - name: Run tests
        run: yarn test

      - name: Commit and push coverage badge
        # This step will only run if the event is a pull_request or a push (not workflow_dispatch manually)
        # and if the branch is not 'main' to avoid direct pushes to main from here.
        # Adjust the 'if' condition based on your exact needs.
        if: (github.event_name == 'pull_request' || github.event_name == 'push') && github.ref != 'refs/heads/main'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add coverage/coverage-badge.svg # Changed path
          # Check if there are changes to commit to avoid erroring if the badge hasn't changed
          if ! git diff --staged --quiet; then
            git commit -m "ci: update coverage badge"
            git push
          else
            echo "No changes to coverage badge to commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN has push permissions to the repo for PR branches
