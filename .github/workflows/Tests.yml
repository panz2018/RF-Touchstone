name: Test

on:
  # Runs on pushes targeting the default branch
  pull_request:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  pre-merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Node.js dependencies
        run: yarn install

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Cache uv global directory
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv # Default uv cache path on Linux
          key: ${{ runner.os }}-uv-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install uv and Python dependencies
        shell: bash
        run: |
          # Install uv
          curl -LsSf https://astral.sh/uv/install.sh | sh
          # The installer script should add uv to PATH. If not, source the cargo env or add manually.
          # Example if installed via cargo (common for Rust tools):
          source "$HOME/.cargo/env"

          # Create virtual environment using uv, explicitly using the Python from setup-python
          uv venv .venv --python $(which python)

          # Activate virtual environment for this script block
          source .venv/bin/activate

          # Install packages using uv
          uv pip install -r requirements.txt --keyring-provider=disabled

      - name: Run tests
        run: yarn test

      - name: Create public assets directory for badge
        run: mkdir -p docs/coverage

      - name: Copy coverage badge to public assets
        run: cp coverage/coverage-badge.svg docs/coverage/coverage-badge.svg
