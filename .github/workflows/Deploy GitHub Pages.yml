# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Run install
        run: yarn install

      - name: Build VitePress docs
        run: yarn docs:md && yarn docs:build

      - name: Create assets directory
        run: mkdir -p ./docs/.vitepress/dist/assets

      - name: Download artifact via API
        run: |
          RUN_ID=$(gh api -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/actions/runs \
            -f event=pull_request \
            -f status=success \
            -f branch=main \
            -f per_page=1 \
            --jq '.workflow_runs[0].id' || echo "0")
          if [ "$RUN_ID" != "0" ]; then
            ARTIFACT_ID=$(gh api -H "Accept: application/vnd.github+json" \
              /repos/${{ github.repository }}/actions/runs/$RUN_ID/artifacts \
              -f name=coverage-badge \
              -f per_page=1 \
              --jq '.artifacts[0].id' || echo "0")
            if [ "$ARTIFACT_ID" != "0" ]; then
              gh api -H "Accept: application/vnd.github+json" \
                /repos/${{ github.repository }}/actions/artifacts/$ARTIFACT_ID/zip \
                -o coverage-badge.zip
              unzip coverage-badge.zip -d ./docs/.vitepress/dist/assets
            else
              echo "No coverage-badge artifact found, skipping download."
            fi
          else
            echo "No successful pull_request run found, skipping download."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: './docs/.vitepress/dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
